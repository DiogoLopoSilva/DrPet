@model DrPet.Web.Models.UserProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

@{
    var asyncSettings = new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = "/Account/UploadImage" };
}

<div class="container my-5 pt-50 userprofilefont">
    <div class="row">
        <div class="col-lg-4">
            <div class="profile-card-4 z-depth-3">
                <div class="card">
                    <div class="card-body text-center bg-primary rounded-top">
                        <div class="user-box" id="test">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <img src="@Url.Content(Model.ImageUrl)" onerror="this.src='../images/Default/nopicture.png'" alt="user avatar" style="width:100px;height:100px;" />
                            }
                            else
                            {
                                <img src="~/images/Default/nopicture.png" alt="user avatar" id="test" style="width:100px;height:100px;">
                            }
                            <i class="fas fa-camera" style="color:white"></i>
                        </div>
                        <h5 class="mb-1 text-white">@Html.DisplayFor(model => model.FullName)</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group shadow-none">
                            <li class="list-group-item text-break">
                                <div class="list-icon">
                                    <i class="fa fa-envelope"></i>
                                </div>
                                <div class="list-details">
                                    <span>@Html.DisplayFor(model => model.UserName)</span>
                                    <small>Email Address</small>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="list-icon">
                                    <i class="fa fa-phone-square"></i>
                                </div>
                                <div class="list-details">
                                    <span> @Html.DisplayFor(model => model.PhoneNumber)</span>
                                    <small>Mobile Number</small>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="list-icon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <div class="list-details">
                                    <span>@Html.DisplayFor(model => model.DateCreated)</span>
                                    <small>Date Created</small>
                                </div>
                            </li>
                        </ul>
                        <div class="row text-center mt-4">
                            @if (Model.Animals != null)
                            {
                                <div class="col p-2">
                                    <h4 class="mb-1 line-height-5"><a asp-controller="Animals" asp-action="Index" asp-route-username="@Model.UserName">@Html.DisplayFor(model => model.Animals.ToList().Count)</a></h4>
                                    <small class="mb-0 font-weight-bold">Animals</small>
                                </div>
                            }
                            <div class="col p-2">
                                <h4 class="mb-1 line-height-5"><a asp-controller="Appointments" asp-action="Index" asp-route-username="@Model.UserName">@Html.DisplayFor(model => model.Appointments.ToList().Count)</a></h4>
                                <small class="mb-0 font-weight-bold">Appointments</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card z-depth-3">
                <div class="card-body">
                    <ul class="nav nav-pills nav-pills-primary nav-justified">
                        <li class="nav-item">
                            <a href="javascript:void();" data-target="#profile" data-toggle="pill" class="nav-link active show"><i class="icon-user"></i> <span class="hidden-xs">Profile</span></a>
                        </li>
                        <li class="nav-item">
                            <a href="javascript:void();" data-target="#appointments" data-toggle="pill" class="nav-link" id="appointmentsClick"><i class="icon-envelope-open"></i> <span class="hidden-xs">Appointments</span></a>
                        </li>
                        @if (!(this.User.IsInRole("Doctor") && this.User.Identity.Name != Model.UserName))
                        {
                            <li class="nav-item">
                                <a href="javascript:void();" data-target="#edit" data-toggle="pill" class="nav-link"><i class="icon-note"></i> <span class="hidden-xs">Edit</span></a>
                            </li>
                        }
                    </ul>
                    <div class="tab-content p-3">
                        <div class="tab-pane active show" id="profile">
                            <h5 class="mb-3">Profile</h5>
                            <div class="row">
                                <div class="col-md-6">
                                    <h6>@Html.DisplayNameFor(model => model.DateOfBirth)</h6>
                                    <p>
                                        @Html.DisplayFor(model => model.DateOfBirth)
                                    </p>
                                    <h6>Address</h6>
                                    <p>
                                        @Html.DisplayFor(model => model.StreetName) @Html.DisplayFor(model => model.PostalCode) @Html.DisplayFor(model => model.Location)
                                    </p>
                                </div>
                                <div class="col-md-6">
                                    <h6>@Html.DisplayNameFor(model => model.DocumentNumber)</h6>
                                    <p>
                                        @Html.DisplayFor(model => model.DocumentNumber)
                                    </p>
                                </div>
                                <div class="col-md-12">
                                    <h5 class="mt-2 mb-3"><span class="fa fa-clock-o ion-clock float-right"></span>Upcoming Appointments</h5>
                                    <table class="table table-hover table-striped">
                                        <tbody>
                                            @if (Model.Appointments.Count() > 0)
                                            {
                                                @foreach (var item in Model.Appointments.Where(a => a.Status=="Confirmed").Take(5))
                                                {
                                                    <tr>
                                                        <td>
                                                            <strong> @Html.DisplayFor(modelItem => item.StartTime)</strong> Appointment for  @Html.DisplayFor(modelItem => item.Animal.Name)<strong>` Dr. @Html.DisplayFor(modelItem => item.Doctor.User.FullName)`</strong>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td>
                                                        No upcoming appointments...
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <!--/row-->
                        </div>
                        <div class="tab-pane" id="appointments">
                            <ejs-schedule id="schedule" startHour="09:00" endHour="18:00" allowMultiCellSelection="false" readonly="true" eventRendered="onEventRendered">
                                <e-schedule-views>
                                    <e-schedule-view option="WorkWeek"></e-schedule-view>
                                </e-schedule-views>
                                <e-schedule-quickinfotemplates content="#content-template">
                                </e-schedule-quickinfotemplates>
                            </ejs-schedule>
                        </div>
                        <div class="tab-pane" id="edit">
                            <form method="post">

                                <div asp-validation-summary="ModelOnly"></div>

                                <div class="form-group row">
                                    <label asp-for="FirstName" class="control-label"></label>
                                    <input asp-for="FirstName" class="form-control" />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <label asp-for="LastName" class="control-label"></label>
                                    <input asp-for="LastName" class="form-control" />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <label asp-for="DateOfBirth" class="control-label"></label>
                                    <input asp-for="DateOfBirth" class="form-control" />
                                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <label asp-for="DocumentNumber" class="control-label"></label>
                                    <input asp-for="DocumentNumber" type="number" class="form-control" />
                                    <span asp-validation-for="DocumentNumber" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <label asp-for="StreetName" class="control-label"></label>
                                    <input asp-for="StreetName" class="form-control" />
                                    <span asp-validation-for="StreetName" class="text-danger"></span>
                                </div>
                                <div class="form-group row">
                                    <div class="col-lg-6 pl-0">
                                        <label asp-for="Location" class="control-label"></label>
                                        <input asp-for="Location" class="form-control" />
                                        <span asp-validation-for="Location" class="text-danger"></span>
                                    </div>
                                    <div class="col-lg-3">
                                        <label asp-for="PostalCode" class="control-label"></label>
                                        <input asp-for="PostalCode" class="form-control" />
                                        <span asp-validation-for="PostalCode" class="text-danger"></span>
                                    </div>
                                    <div class="col-lg-3">
                                        <label asp-for="PhoneNumber" class="control-label"></label>
                                        <input asp-for="PhoneNumber" class="form-control" />
                                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                    </div>
                                </div>
                                @if (this.User.Identity.IsAuthenticated && Model.Doctor != null)
                                {
                                    <div class="form-group">
                                        <label asp-for="SpecializationId" class="control-label"></label>
                                        <select asp-for="SpecializationId" asp-items="Model.Specializations" class="form-control"></select>
                                        <span asp-validation-for="SpecializationId" class="text-danger"></span>
                                    </div>

                                    <input type="hidden" asp-for="Doctor.Id" />
                                }
                                else
                                {
                                    <input type="hidden" asp-for="SpecializationId" />
                                }
                                <input type="hidden" asp-for="UserName" class="form-control" />
                                <div class="form-group row justify-content-center">
                                    <label class="col-lg-3 col-form-label form-control-label justify-content-center"></label>
                                    <div class="col-lg-9">
                                        <input type="reset" class="btn btn-secondary" value="Cancel">
                                        <input type="submit" asp-action="UpdateUser" class="btn btn-primary" value="Save Changes">
                                        @if (this.User.Identity.Name == Model.UserName)
                                        {
                                            <a asp-action="ChangePassword" class="btn btn-success">Change Password</a>
                                        }
                                    </div>                                 
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<ejs-uploader id="ImageFile" uploading="onFileUpload" multiple="false" autoUpload="true" asyncSettings="@asyncSettings" success="onSuccess" cssClass="FileUploadProfile" allowedExtensions=".jpg, .jpeg, .bmp, .png"></ejs-uploader>

<script id="content-template" type="text/x-template">
    <div class="quick-info-content">
        <div class="event-content">
            <div class="meeting-type-wrap">
                <label>Client</label>:
                <span> ${Client.User.FullName}</span>
            </div>
            <div class="meeting-type-wrap">
                <label>Animal</label>:
                <span> ${Animal.Name}</span>
            </div>
            <div class="meeting-type-wrap">
                <label>Doctor</label>:
                <span> ${Doctor.User.FullName}</span>
            </div>
            <div class="meeting-type-wrap">
                <label>Description</label>:
                <span> ${ClientDescription}</span>
            </div>
            <div class="meeting-type-wrap">
                <label>Time</label>:
                <span>${StartTime}</span>
            </div>
        </div>
    </div>
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    $("#test").click(function () {
         var admin = '@this.User.IsInRole("Admin")';

        if (admin === 'True' || '@this.User.Identity.Name' == '@Model.UserName') {
            $("#ImageFile").click();
        }
    });

    function onFileUpload(args) {
        args.customFormData = [{ 'username': '@Model.UserName' }];
    }

      function onSuccess(args) {
          location.reload();
      }

    function onEventRendered(args) {
        var categoryColor;
        switch (args.data.Status) {
            case 'Confirmed':
                categoryColor = '#0059ff';
                break;
            case 'Waiting':
                categoryColor = '#ffc107';
                break;
            case 'InProgress':
                categoryColor = '#17a2b8';
                break;
            case 'Completed':
                categoryColor = '#129600';
                break;
        }
        if (!args.element || !categoryColor) {
            return;
        }
        var scheduleObj = document.getElementById('schedule').ej2_instances[0];
        if (scheduleObj.currentView === 'Agenda') {
            (args.element.firstChild).style.borderLeftColor = categoryColor;
        } else {
            args.element.style.backgroundColor = categoryColor;
        }
    }

    $("#appointmentsClick").click(function () {
        var data = @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Appointments)));
        var scheduleObj = document.getElementById('schedule').ej2_instances[0];
        scheduleObj.eventSettings.dataSource = data;
        scheduleObj.dataBind();
    });
</script>